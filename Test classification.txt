review :
	总体的编写测试用例的方法 : 基于需求的测试方法(逆向思维和)
	六种具体的测试方法 因果图5个步骤
	

1. 测试分类: 基本掌握 -> 按开发阶段 ; 按是否查看代码 ; 按测试对象
2. 按开发阶段划分: 单元测试 ; 集成测试 ; 系统测试 ; 验收测试
	测试金字塔: 塔顶是最简单的, 塔底是最难的
		UI界面层: 功能验证测试 ; 兼容性与用户测试
		业务逻辑层: 客户端模拟测试 ; 
					内外接口测试(外部接口就是用可以用qq或者微信等不是这个应用的东西登陆) ; 
					SDK接口测试
		数据处理层: 单元测试 (写代码进行测试); 
					CodeReview(人工 / 工具)
	1.单元测试: 就是对模块进行测试, 所以也叫模块测试 (是一个接口的测试*)
		测试阶段: 编码后/前  (TDD Test Drive Develop 测试驱动开发)
		测试对象: 最小模块
		测试人员: 白盒测试工程师或开发工程师
		测试依据: 代码 + 注释 + 详细设计文档
		测试方法: 白盒测试
		测试内容: 模块接口测试 ; 局部数据结构测试 ; 路径测试 ; 错误处理测试 ; 边界测试
	2.集成测试: 又称联合测试, 组装测试, 对系统的接口(白盒测试)及集成后的功能(黑盒测试)的正确性进行检测
				强调的是接口之间的正确性*
		测试阶段: 一般在单元测试之后
		测试对象: 模块间
		测试人员: 白盒或开发
		测试依据: 单元测试的模块 + 概要设计文件
		测试方法: 黑盒+白盒
		测试内容: 模块之间数据传输;模块之间功能重提;模块组装功能正确性;全局数据结构;
				  单模块缺陷对系统的影响(假设一个软件的登陆模块除了问题, 就会影响之后的)
	3.系统测试: 是设计面最广的, 包括回归测试和冒烟测试
		测试阶段: 集成之后
		测试对象: 整个系统(软件和硬件)
		测试人员: 黑盒测试人员
		测试依据: 需求规格说明书
		测试方法: 黑盒测试
		测试内容: 功能; 界面; 可靠性; 易用性; 性能; 兼容性; 安全性等
		
		回归测试(Regression Testing): 修改了旧代码的bug后, 重新进行测试以确定没有引入新的错误或导致其他的代码产生错误
									  可以大幅度降低系统测试,维护升级等阶段的成本
									  可以用自动化测试来降低难度和工程量
		冒烟测试(Smoke Testing): 是否接收测试的标准(冒烟来自硬件行业,就是直接给设备加电,如果没有冒烟,则该组件通过了测试)
		
	一般流程: 先冒烟, 然后系统测试, 最后是回归测试*
		
	4.验收测试: 最后一个阶段, 又叫交付测试, 验证是否满足了用户的原始需求
		测试阶段: 系统测试之后
		测试对象: 整个系统
		测试人员: 最终用户或者需求方
		测试依据: 用户需求;验收标准
		测试方法: 黑盒测试
		测试内容: 同系统测试

3. 按测试实施组织
	1.α测试: 用户在预发布环境下进行测试(手机出厂前的最后一次测试)
	2.β测试: 是在客户的环境和场所进行测试, 是验收测试(用户买了手机回来进行使用)
	做这个项目的开发和测试人员不参见1,2的测试环节, 预发布环境
	β测试的周期比α的测试周期长, 原因是, 客户要在长时间里进行测试, 测试时间越长, 交付尾款的时间就晚一些
	3.第三方测试:介于开发方和用户方的组织的测试, 是独立的, 只做测试
	
4. 按是否运行划分
	1.静态测试: 不运行代码,检查源程序的语法, 结构, 过程, 接口等.  文档测试和代码分析都属于静态测试
	软件质量的6性: 功能性, 可靠性, 可用性, 有效性, 可维护性, 可移植性
	2.动态测试: 运行代码. 构造测试用例, 执行程序, 分析执行结果
5. 按是否手工划分
	1.自动化测试: 通常指的是功能自动化, 
	2.手工测试: 人工输入用例, 观察结果. 优点是, 自动化无法替代探索性测试, 分散思维结果的测试.
6. 按是否查看代码划分
	1.黑盒测试: 功能测试, 只关心输入输出数据
	2.白盒测试: 结构测试, 
	3.灰盒测试:多用于集成测试阶段, 不仅关注输入输出的正确性, 也关注程序内部
7. 按测试地域划分
	1.国际化测试:
	2.本地化测试:
	